{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","isSortAlphabet","isSortLength","sortType","NONE","valueMinLensthGood","start","setState","sortByAlpabet","ALPABET","sortByLength","LENGTH","reverse","reset","handleChangeValueLength","event","Number","target","value","this","resultGoods","goods","sortBy","isRevers","valueSelect","visibleGoods","filter","good","length","sort","a","b","localeCompare","getReorderedGoods","className","type","onClick","cn","map","name","onChange","position","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAeL,IAwBaE,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdC,SAAUR,EAASS,KACnBC,mBAAoB,GAPxB,EAUEC,MAAQ,WACN,EAAKC,SAAS,CAAER,WAAW,KAX/B,EAcES,cAAgB,WACd,EAAKD,UAAS,gBAAGN,EAAH,EAAGA,eAAH,MAAyB,CACrCE,SAAUR,EAASc,QACnBR,gBAAkBA,OAjBxB,EAqBES,aAAe,WACb,EAAKH,UAAS,gBAAGL,EAAH,EAAGA,aAAH,MAAuB,CACnCC,SAAUR,EAASgB,OACnBT,cAAgBA,OAxBtB,EA4BEU,QAAU,WACR,EAAKL,UAAS,SAACT,GAAD,MAAY,CAAEE,YAAaF,EAAME,gBA7BnD,EAgCEa,MAAQ,WACN,EAAKN,SACH,CACEJ,SAAUR,EAASS,KACnBJ,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdG,mBAAoB,KAvC5B,EA4CES,wBAA0B,SAACC,GACzB,EAAKR,SAAS,CAAEF,mBAAoBW,OAAOD,EAAME,OAAOC,UA7C5D,4CAgDE,WAAU,IAAD,OACP,EAOIC,KAAKrB,MANPE,EADF,EACEA,WACAD,EAFF,EAEEA,UACAG,EAHF,EAGEA,aACAD,EAJF,EAIEA,eACAE,EALF,EAKEA,SACAE,EANF,EAMEA,mBAIIe,EAnFgB,SACxBC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAeJ,EAClBK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,KAcjC,OAZIF,IAAW3B,EAASc,SACtBgB,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAG1CR,IAAW3B,EAASgB,QACtBc,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEH,OAASE,EAAEF,UAGtCL,GACHE,EAAab,UAGRa,EA8DeQ,CAClBrC,EACAO,EACAH,EACAK,GAGF,OACE,sBAAK6B,UAAU,YAAf,WAEInC,GACA,wBACEoC,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAM,EAAK9B,SAHtB,mBASDP,GAEG,qCACE,sBAAKmC,UAAU,iBAAf,UACE,wBACEC,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAYpC,IAEhBmC,QAAS,kBAAM,EAAK5B,iBAPtB,iCAYA,wBACE2B,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAYnC,IAEhBkC,QAAS,kBAAM,EAAK1B,gBAPtB,4BAYA,wBACEyB,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAYrC,IAEhBoC,QAAS,kBAAM,EAAKxB,WAPtB,qBAYA,wBACEuB,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAM,EAAKvB,SAHtB,sBASF,oBAAIqB,UAAU,QAAd,SACId,EAAYkB,KAAI,SAAAX,GAAI,OACpB,oBAAIO,UAAU,cAAd,SAAwCP,GAAPA,QAGrC,sBAAMO,UAAU,cAAhB,qCACA,wBACEK,KAAK,SACLrB,MAAOC,KAAKrB,MAAMO,mBAClBmC,SAAUrB,KAAKL,wBAHjB,SA5Ec,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAiFxCwB,KAAI,SAAAG,GAAQ,OAC5B,wBAAQvB,MAAOuB,EAAf,SAA0BA,mBA5I5C,GAAyBC,aCvDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fd8674e1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\nimport { ChangeEvent, Component } from 'react';\nimport cn from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  isSortAlphabet: boolean,\n  isSortLength: boolean,\n  sortType: SortType,\n  valueMinLensthGood: number,\n};\n\nconst getReorderedGoods = (\n  goods: string[],\n  sortBy: SortType,\n  isRevers: boolean,\n  valueSelect: number,\n): string[] => {\n  const visibleGoods = goods\n    .filter(good => good.length >= valueSelect);\n\n  if (sortBy === SortType.ALPABET) {\n    visibleGoods.sort((a, b) => b.localeCompare(a));\n  }\n\n  if (sortBy === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => b.length - a.length);\n  }\n\n  if (!isRevers) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    isSortAlphabet: false,\n    isSortLength: false,\n    sortType: SortType.NONE,\n    valueMinLensthGood: 1,\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortByAlpabet = () => {\n    this.setState(({ isSortAlphabet }) => ({\n      sortType: SortType.ALPABET,\n      isSortAlphabet: !(isSortAlphabet),\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(({ isSortLength }) => ({\n      sortType: SortType.LENGTH,\n      isSortLength: !(isSortLength),\n    }));\n  };\n\n  reverse = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        sortType: SortType.NONE,\n        isReversed: false,\n        isSortAlphabet: false,\n        isSortLength: false,\n        valueMinLensthGood: 1,\n      },\n    );\n  };\n\n  handleChangeValueLength = (event: ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ valueMinLensthGood: Number(event.target.value) });\n  };\n\n  render() {\n    const {\n      isReversed,\n      isStarted,\n      isSortLength,\n      isSortAlphabet,\n      sortType,\n      valueMinLensthGood,\n    } = this.state;\n\n    const positionsSelect = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    const resultGoods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n      valueMinLensthGood,\n    );\n\n    return (\n      <div className=\"App level\">\n\n        {!isStarted && (\n          <button\n            type=\"button\"\n            className=\"button is-warning\"\n            onClick={() => this.start()}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted\n          && (\n            <>\n              <div className=\"button-wrapper\">\n                <button\n                  type=\"button\"\n                  className={cn(\n                    'button',\n                    'is-success',\n                    { 'is-light': isSortAlphabet },\n                  )}\n                  onClick={() => this.sortByAlpabet()}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className={cn(\n                    'button',\n                    'is-success',\n                    { 'is-light': isSortLength },\n                  )}\n                  onClick={() => this.sortByLength()}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  className={cn(\n                    'button',\n                    'is-success',\n                    { 'is-light': isReversed },\n                  )}\n                  onClick={() => this.reverse()}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-success\"\n                  onClick={() => this.reset()}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <ul className=\"Goods\">\n                { resultGoods.map(good => (\n                  <li className=\"Goods__item\" key={good}>{good}</li>\n                ))}\n              </ul>\n              <span className=\"titleSelect\">Filterd by name length:</span>\n              <select\n                name=\"select\"\n                value={this.state.valueMinLensthGood}\n                onChange={this.handleChangeValueLength}\n              >\n                { positionsSelect.map(position => (\n                  <option value={position}>{position}</option>))}\n              </select>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}